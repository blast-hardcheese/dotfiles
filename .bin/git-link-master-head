#!/bin/sh

set +e

die() {
  echo "$@" >&2
  exit 1
}

git_link_master_head() {
  force=
  while [ "${#@}" -gt 0 ]; do
    case "$1" in
      -f|--force)
        force=1
        ;;
      -t|--target)
        master="$2"
        shift || die '-t|--target needs an argument'
        ;;
      *)
        remote="$1"
        ;;
    esac
    shift
  done
  if [ -z "$remote" ]; then
    remote='origin'
  fi
  ref=".git/refs/remotes/$remote/HEAD"
  if [ ! -d .git ]; then
    return 1
  elif [ ! -d ".git/refs/remotes/$remote" ]; then
    return 2
  else
    if [ -z "$force" ] && [ -f ".git/refs/remotes/$remote/HEAD" ]; then
      die "$remote/HEAD already present, use -f to overwrite"
    fi
    url="$(git remote get-url "$remote")"
    if [ "$url" = https://*github.com/* ]; then
      url="${url#https://*github.com/}"
    else
      url="${url#*:}"
    fi
    url="${url%.git}"
    if [ -z "$master" ]; then
      if hash gh 2>/dev/null >/dev/null; then
        master="$(gh api "repos/$url" --jq .default_branch)"
      else
        die 'Missing -t|--target and no fallback gh available'
      fi
    fi
    echo "ref: refs/remotes/$remote/$master" > "$ref"
  fi
}

git_link_master_head "$@"
