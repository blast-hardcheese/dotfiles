#!/usr/bin/env dash

show_help() {
  echo "Usage: git open [-h] [-n|-c] [-r remote] [path]"
}

OPTERR=0

noopen=0
clipboard=0
remote="origin"

while getopts "hncr:" opt; do
  case "$opt" in
  h)
    show_help
    exit 0
    ;;
  n)
    noopen=1
    ;;
  c)
    clipboard=1
    ;;
  r)
    remote="$OPTARG"
    ;;
  ?)
    show_help
    exit 1
    ;;
  esac
done

if [ $noopen -eq 1 -a $clipboard -eq 1 ]; then
  show_help
  exit 1
fi

shift $(($OPTIND - 1))

filepath="$1"
if [ ! -z "$filepath" ]; then
  shift
fi

if type xclip >/dev/null 2>&1 && [ -n "$DISPLAY" ]; then
  XCLIP_IN="xclip -i";
  XCLIP_OUT="xclip -o";
elif type pbcopy >/dev/null 2>&1; then
  XCLIP_IN="pbcopy";
  XCLIP_OUT="pbpaste";
else
  unset XCLIP_IN
  unset XCLIP_OUT
fi

if type xdg-open >/dev/null 2>&1 && [ -n "$DISPLAY" ]; then
  OPEN="xdg-open"
elif type open >/dev/null 2>&1; then
  OPEN="open"
fi

line=$(git remote -v show -n "$remote" | grep 'Fetch URL')

if echo $line | grep -q "github.com"; then
  repopath=$(echo "$line" | grep -ho 'github.com[:/].*' | sed 's~^github.com[:/]~~; s~\.git$~~')
  branchname=$(git name-rev HEAD | sed 's/^HEAD //')

  url="https://github.com/$repopath"
  if [ "$branchname" != "master" ]; then
    url="$url/tree/$branchname"
  fi
  if [ ! -z "$filepath" ]; then
    url="$url/$filepath"
  fi
fi

if [ $noopen -eq 1 ]; then
  echo "$url"
elif [ $clipboard -eq 1 ]; then
  echo "$url\c" | $XCLIP_IN && echo "Copied to clipboard"
else
  $OPEN "$url"
fi
