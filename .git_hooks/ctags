#!/bin/bash

READLINK=readlink
type greadlink 2>/dev/null >/dev/null && READLINK=greadlink

set -e
PATH="/usr/local/bin:$PATH"
if [ "$(git rev-parse --is-inside-work-tree)"='true' ]; then

  gitdir="$(   "$READLINK" -f "$(git rev-parse --git-dir       )")"
  commondir="$("$READLINK" -f "$(git rev-parse --git-common-dir)")"

elif [ "$(git rev-parse --is-inside-git-dir)"='true' ]; then

  gitdir="$(   "$READLINK" -f "$(git rev-parse --git-dir       )")"
  commondir="$gitdir"

else
  echo 'Not inside a git repo, bailing' >&2
  exit 1
fi

repopath="$(dirname "${commondir}")"

parentdir="$(dirname "${repopath}")"
reponame="$(basename "${repopath}")"

parenttagspath="${parentdir}/.tags"
repotagspath="$gitdir/tags"

STAT=stat
type gstat 2>/dev/null >/dev/null && STAT=gstat

if [ -e "$repotagspath" ] && [ $(($(date +%s) - $("$STAT" -L --format %Y "$repotagspath"))) -lt 10 ]; then
  # Modified recently, skipping...
  exit 1
fi

trap 'rm -f "$gitdir/tags.$$"' EXIT

if [ -f "$gitdir/.ctags-ignore" ]; then
  ignorepath="$gitdir/.ctags-ignore"
else
  ignorepath="$commondir/.ctags-ignore"
fi

uuid=$(uuidgen)
echo "$uuid" > "$gitdir/taglock"

set -o pipefail

if [ -f "$gitdir/taglock" ] && [ $(cat "$gitdir/taglock") = "$uuid" ]; then

  langs=
  if [ -e "build.sbt" ] || [ -e "pom.xml" ] || [ -d "project" ]; then
    langs=scala,java
  elif [ -e "requirements.txt" ] || [ -e "setup.py" ]; then
    langs=python
  fi

  export ignorepath
  ([ -f "$ignorepath" ] && git ls-files | grep -E -v -f "$ignorepath" || git ls-files) | \
    ctags --languages="$langs" --tag-relative -L - -f"$gitdir/tags.$$"
  export -n ignorepath

  mv "$gitdir/tags.$$" "${repotagspath}"


  if [ -f "${parenttagspath}" ]; then
    (
      grep -v "\t${reponame}/" "${parenttagspath}"                             || true
      grep -v "^!_TAG_" "${repotagspath}" | sed $'s~\t../~\t'"${reponame}"'/~' || true
    ) | sort -u >> "${parenttagspath}.$$"

    mv -f -v "${parenttagspath}" "${parenttagspath}.bak"
    mv -v "${parenttagspath}.$$" "${parenttagspath}"
  fi

  rm -f "$gitdir/taglock"

fi
